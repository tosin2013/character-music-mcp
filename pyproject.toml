[project]
name = "character-music-mcp"
version = "1.0.0"
description = "Character-driven music generation MCP server integrating narrative analysis with Suno AI"
readme = "README.md"
authors = [
    { name = "MiniMax Agent", email = "agent@minimax.ai" }
]
license = { text = "MIT" }
requires-python = ">=3.10"
dependencies = [
    "fastmcp>=2.0.0",
    "pydantic>=2.0.0",
    "aiohttp>=3.8.0",
    "aiofiles>=23.0.0",
    "python-dotenv>=1.0.0",
    "rich>=13.0.0",
    "beautifulsoup4>=4.12.0",
    "lxml>=4.9.0",
    "psutil>=5.9.0",
    "watchdog>=3.0.0",
]

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-benchmark>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "coverage>=7.0.0"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["."]

[tool.ruff]
target-version = "py310"
line-length = 100

[tool.ruff.lint]
select = ["E", "F", "W", "B", "I", "N"]
ignore = ["E501", "B008"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--tb=short",
    "--strict-markers",
    "--color=yes",
    "--durations=10"
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "performance: Performance tests",
    "validation: Validation tests",
    "slow: Slow running tests",
    "benchmark: Benchmark tests"
]
timeout = 300
asyncio_mode = "auto"

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "scripts/*",
    ".venv/*",
    "build/*",
    "dist/*",
    "*.egg-info/*"
]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"

[[tool.uv.index]]
url = "https://mirrors.aliyun.com/pypi/simple"
default = true
